{"version":3,"sources":["components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoInsert","onInsertToggle","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","className","onClick","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","TodoList","todos","map","TodoTemplate","children","insertToggle","setInsertToggle","prev","App","setTodos","nextid","useRef","current","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c1ff6f3.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport './TodoInsert.scss';\nimport { MdAddCircle } from 'react-icons/md';\n\nconst TodoInsert = ({ onInsertToggle, onInsert }) => {\n  const [value, setValue] = useState('');\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n    // console.log(e.target.value);\n  }, []);\n  const onSubmit = useCallback((e) => {\n    onInsert(value);\n    setValue('');\n    e.preventDefault();\n    onInsertToggle();\n  });\n  return (\n    <div>\n      <div className=\"background\" onClick={onInsertToggle} />\n      <form className=\"TodoInsert\" onSubmit={onSubmit}>\n        <input placeholder=\"What's Todo?\" value={value} onChange={onChange} />\n        <button type=\"submit\">\n          <MdAddCircle />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TodoInsert;\n","import React from 'react';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\nimport cn from 'classnames';\nimport './TodoListItem.scss';\n\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\n  const { id, text, checked } = todo;\n  return (\n    <div className=\"TodoListItem\">\n      <div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}>\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n        <div className=\"text\">{text}</div>\n      </div>\n      <div className=\"remove\" onClick={() => onRemove(id)}>\n        <MdRemoveCircleOutline />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport './TodoList.scss';\nimport TodoListItem from './TodoListItem';\n\nconst TodoList = ({ todos, onRemove, onToggle }) => {\n  return (\n    <div className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoListItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\nexport default TodoList;\n","import React, { useState } from 'react';\nimport TodoInsert from './TodoInsert';\nimport './TodoTemplate.scss';\n\nconst TodoTemplate = ({ children, onInsert }) => {\n  const [insertToggle, setInsertToggle] = useState(false);\n  const onInsertToggle = () => {\n    setInsertToggle((prev) => !prev);\n  };\n  return (\n    <>\n      <div className=\"TodoTemplate\">\n        <div className=\"app-title\">Website todo</div>\n        <div className=\"content\">{children}</div>\n        <div className=\"add-todo-button\" onClick={onInsertToggle}>\n          + New task\n        </div>\n      </div>\n      {insertToggle && (\n        <TodoInsert onInsertToggle={onInsertToggle} onInsert={onInsert} />\n      )}\n    </>\n  );\n};\nexport default TodoTemplate;\n","// import \"./App.css\";\n\nimport { useCallback, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '테스트 중입니다.',\n      checked: true,\n    },\n  ]);\n  const nextid = useRef(4);\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextid.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextid.current += 1;\n    },\n    [todos],\n  );\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos],\n  );\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n  return (\n    <>\n      <TodoTemplate onInsert={onInsert}>\n        <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n      </TodoTemplate>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}